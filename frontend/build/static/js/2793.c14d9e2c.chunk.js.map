{"version":3,"file":"static/js/2793.c14d9e2c.chunk.js","mappings":"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","sources":["Pages/Admin/Childrens/AdDetails.js","Pages/Admin/Childrens/AdList.js","api/admin.js","constants/url.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { \r\n  Col, \r\n  Container, \r\n  Dropdown, \r\n  Row \r\n} from \"react-bootstrap\";\r\nimport { BiArrowBack, BiLinkAlt } from \"react-icons/bi\";\r\nimport { IoMdAlarm } from \"react-icons/io\";\r\nimport { MdCropFree } from \"react-icons/md\";\r\nimport { RiMoneyDollarCircleLine } from \"react-icons/ri\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { BACKEND_URL } from \"../../../constants/url\";\r\nimport { Button, CircularProgress } from \"@mui/material\";\r\nimport DoDisturbAltIcon from \"@mui/icons-material/DoDisturbAlt\";\r\nimport moment from \"moment\";\r\nimport * as api from \"../../../api/admin\";\r\n\r\nfunction AdDetails({ adData, setSelectedAd }) {\r\n  const [fullDetails, setFullDetails] = useState({});\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const SHOW = \"SHOW_ADMIN_PROGRESS\";\r\n  const HIDE = \"HIDE_ADMIN_PROGRESS\";\r\n\r\n  useEffect(() => {\r\n    {\r\n      adData &&\r\n        (async () => {\r\n          try {\r\n            setLoading(true);\r\n            const { data } = await api.getAdRevenueDetails(adData?._id);\r\n\r\n            if (data.status) {\r\n              setLoading(false);\r\n              setFullDetails({ ...data?.details });\r\n            } else {\r\n              setLoading(false);\r\n            }\r\n          } catch (err) {\r\n            setLoading(false);\r\n          }\r\n        })();\r\n    }\r\n  }, [adData]);\r\n\r\n  const handleEndCampaign = async () => {\r\n    try {\r\n      dispatch({ type: SHOW });\r\n      let { data } = await api.endCampaign(adData?._id);\r\n      dispatch({ type: HIDE });\r\n      if (data) {\r\n        setSelectedAd((prev) => ({\r\n          ...prev,\r\n          isCancelled: true,\r\n          status: \"Cancelled\",\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: HIDE });\r\n    }\r\n  };\r\n  const handleApprove = async () => {\r\n    try {\r\n      dispatch({ type: SHOW });\r\n      let { data } = await api.approveAd(adData?._id);\r\n      dispatch({ type: HIDE });\r\n      if (data) {\r\n        setSelectedAd((prev) => ({\r\n          ...prev,\r\n          isApproved: true,\r\n          status: \"Active\",\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: HIDE });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"mt-2 pointer fw-500 f-green\"\r\n        onClick={() => setSelectedAd(null)}\r\n      >\r\n        <BiArrowBack className=\"me-1\" />\r\n        Go back\r\n      </div>\r\n      <div className=\"mt-4\">\r\n        <Row>\r\n          <Col lg={3}>\r\n            <div className=\"ad-analytics-col bg-white\">\r\n              ₹{\" \"}\r\n              {loading ? (\r\n                <>\r\n                  <CircularProgress size={26} style={{ color: \"black\" }} />\r\n                </>\r\n              ) : (\r\n                <>{fullDetails?.CPI ? fullDetails?.CPI : \"0.00\"}</>\r\n              )}\r\n              <p className=\"text-end mb-0 mt-2 f-15\">\r\n                CPI <span className=\"f-12\">(Cost Per Impression)</span>\r\n              </p>\r\n            </div>\r\n          </Col>\r\n          <Col lg={3}>\r\n            <div className=\"ad-analytics-col bg-white\">\r\n              ₹{\" \"}\r\n              {loading ? (\r\n                <>\r\n                  <CircularProgress size={26} style={{ color: \"black\" }} />\r\n                </>\r\n              ) : (\r\n                <>{fullDetails?.CPC ? fullDetails?.CPC : \"0.00\"}</>\r\n              )}\r\n              <p className=\"text-end mb-0 mt-2 f-15\">\r\n                CPC <span className=\"f-12\">(Cost Per Click)</span>\r\n              </p>\r\n            </div>\r\n          </Col>\r\n          <Col lg={3}>\r\n            <div className=\"ad-analytics-col bg-white\">\r\n              <span style={{ color: \"green\" }}>\r\n                ₹{\" \"}\r\n                {fullDetails?.total\r\n                  ? (fullDetails?.total - fullDetails?.paid_amount).toFixed(2)\r\n                  : \"0.00\"}\r\n              </span>\r\n              <p className=\"text-end mb-0 mt-2 f-15 \">\r\n                <span className=\"f-15 me-2\" style={{ color: \"red\" }}>\r\n                  - {fullDetails?.paid_amount}{\" \"}\r\n                </span>\r\n                Amount to Pay\r\n              </p>\r\n            </div>\r\n          </Col>\r\n          <Col lg={3}>\r\n            <div className=\"ad-analytics-col ad-analytics-total\">\r\n              ₹{\" \"}\r\n              {loading ? (\r\n                <>\r\n                  <CircularProgress size={26} style={{ color: \"white\" }} />\r\n                </>\r\n              ) : (\r\n                <>{fullDetails?.total ? fullDetails?.total : \"0.00\"}</>\r\n              )}\r\n              <p className=\"text-end mb-0 mt-2 f-15 \">\r\n                Total <span className=\"f-12\">(CPC + CPI)</span>\r\n              </p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n      <div>\r\n        <Row className=\"mt-1 mb-5\">\r\n          <Col>\r\n            <Container className=\"ad-details-main bg-white\">\r\n              <Row className=\"head\">\r\n                <Col>\r\n                  <p className=\"fw-500\">AD ID: {adData?._id}</p>\r\n                </Col>\r\n\r\n                {(adData?.status === \"Active\" ||\r\n                  adData?.status === \"Pending\") && (\r\n                  <Col className=\"content-end\">\r\n                    <Dropdown className=\"d-inline mx-2\">\r\n                      <Dropdown.Toggle\r\n                        id=\"dropdown-autoclose-true\"\r\n                        className=\"dropBtn dropBtn-ads\"\r\n                      >\r\n                        Actions\r\n                      </Dropdown.Toggle>\r\n\r\n                      <Dropdown.Menu className=\"dropmenu-ad\">\r\n                        <Dropdown.Item href=\"#\">\r\n                          <div className=\"end-btn\" onClick={handleEndCampaign}>\r\n                            <DoDisturbAltIcon className=\"me-2\" />\r\n                            End Campain\r\n                          </div>\r\n                        </Dropdown.Item>\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n              <Row>\r\n                <Col className=\"details-left-content\" lg={6}>\r\n                  <p className=\"titles\">Title:</p>\r\n                  <p>{adData?.title}</p>\r\n\r\n                  <p className=\"titles\">\r\n                    <BiLinkAlt /> Url:\r\n                  </p>\r\n                  <p>{adData?.url}</p>\r\n\r\n                  <span className=\"titles me-2\">\r\n                    <MdCropFree /> Format:\r\n                  </span>\r\n                  <span>{adData?.format}</span>\r\n                  <br />\r\n                  <span className=\"titles me-2\">\r\n                    <RiMoneyDollarCircleLine /> Budget:\r\n                  </span>\r\n                  <span>₹ {adData?.estAmount}</span>\r\n                </Col>\r\n                <Col className=\"details-right-content\" lg={6}>\r\n                  <span className=\"titles me-2\">Status:</span>\r\n                  {\r\n                    <span\r\n                      className={`sponsor-status-span \r\n                                  ${\r\n                                    adData?.status === \"Active\" &&\r\n                                    \"ad-status-active\"\r\n                                  }\r\n                                  ${\r\n                                    (adData?.status === \"Not Started\" ||\r\n                                      adData?.status === \"Pending\") &&\r\n                                    \"ad-status-pending\"\r\n                                  }\r\n                                  ${\r\n                                    (adData?.status === \"Ended\" ||\r\n                                      adData?.status === \"Cancelled\") &&\r\n                                    \"ad-status-ended\"\r\n                                  }`}\r\n                    >\r\n                      {adData?.status}\r\n                    </span>\r\n                  }\r\n\r\n                  {!adData?.isApproved && adData?.status === \"Pending\" && (\r\n                    <span>\r\n                      <Button className=\"ms-3\" onClick={handleApprove}>\r\n                        APPROVE AD\r\n                      </Button>\r\n                    </span>\r\n                  )}\r\n\r\n                  <br />\r\n                  <br />\r\n\r\n                  <span className=\"titles me-2\">Est. Views:</span>\r\n                  <span>{adData?.estView}</span>\r\n                  <br />\r\n\r\n                  <span className=\"titles me-2\">Total Views:</span>\r\n                  <span>{adData?.viewsCount}</span>\r\n                  <br></br>\r\n\r\n                  <span className=\"titles me-2\">Clicks:</span>\r\n                  <span>{adData?.clickCount}</span>\r\n\r\n                  <p className=\"titles mt-3\">\r\n                    <IoMdAlarm /> Duration:\r\n                  </p>\r\n                  <p>\r\n                    {moment(adData?.startDate).format(\"MMMM d, YYYY\")} -{\" \"}\r\n                    {moment(adData?.endDate).format(\"MMMM d, YYYY\")}\r\n                  </p>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"banner-row\">\r\n                <p className=\"titles mt-3\">\r\n                  <BiLinkAlt /> Banners:\r\n                </p>\r\n\r\n                <p></p>\r\n\r\n                <Col lg={6} className=\"mb-3\">\r\n                  <img\r\n                    className=\"banner-thumbnail\"\r\n                    src={`${BACKEND_URL}/uploads/${adData.imageFrm}`}\r\n                    alt=\"\"\r\n                  />\r\n                </Col>\r\n\r\n                <Col lg={6} className=\"mb-3\">\r\n                  <img\r\n                    className=\"banner-thumbnail\"\r\n                    src={`${BACKEND_URL}/uploads/${adData.imageSqr}`}\r\n                    alt=\"\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as api from '../../../api/admin'\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\r\nimport { \r\n  Button, \r\n  ToggleButton, \r\n  ToggleButtonGroup \r\n} from \"@mui/material\";\r\nimport moment from 'moment'\r\nimport AdDetails from \"./AdDetails\";\r\n\r\n\r\nexport default function AdList() {\r\n\r\n  const [status,setStatus] = useState('ALL')\r\n  const [ads,setAds] = useState([])\r\n  const [selectedAd,setSelectedAd] = useState(null)\r\n  \r\n\r\n  useEffect(() => {\r\n    ads.length=0;\r\n    setAds([...ads])\r\n    loadAds(0,10,status)\r\n  }, [status]);\r\n\r\n\r\n  const loadAds = async (skip,limit,status) => {\r\n      let {data} = await api.fetchAds(skip,limit,status)\r\n      if(data?.ads) setAds([...ads,...data?.ads])\r\n      if(data?.message) alert(data?.message)\r\n  }\r\n\r\n  const handleLoadmore = async () => {\r\n      loadAds(parseInt(ads.length),parseInt(ads.length+10),status)\r\n  }\r\n\r\n  const handleChange = (event, newStatus) => {\r\n    setStatus(newStatus);\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n    {\r\n      !selectedAd ?\r\n      <>\r\n      <div className=\"content-end mt-3\">\r\n        <ToggleButtonGroup\r\n              color=\"primary\"\r\n              style={{backgroundColor:\"white\"}}\r\n              value={status}\r\n              exclusive\r\n              onChange={handleChange}\r\n            >\r\n              <ToggleButton value=\"ALL\" className='show-post-toogle'>All</ToggleButton>\r\n              <ToggleButton value=\"ACTIVE\" className='show-post-toogle'>ACTIVE</ToggleButton>\r\n              <ToggleButton value=\"INACTIVE\" className='show-post-toogle'>INACTIVE</ToggleButton>\r\n              <ToggleButton value=\"PENDING\" className='show-post-toogle'>PENDING</ToggleButton>\r\n              <ToggleButton value=\"ENDED\" className='show-post-toogle'>ENDED</ToggleButton>\r\n        </ToggleButtonGroup>\r\n    </div>\r\n\r\n    <TableContainer component={Paper} className=\"mt-1\">\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Ad Id:</TableCell>\r\n            <TableCell>Title</TableCell>\r\n            <TableCell>Duration</TableCell>\r\n            <TableCell>SponsorId</TableCell>\r\n            <TableCell>Views</TableCell>\r\n            <TableCell>Clicks</TableCell>\r\n            <TableCell>Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {ads.map((row) => (\r\n            <TableRow\r\n              key={row._id}\r\n              sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n            >\r\n              <TableCell className=\"id-row\" scope=\"row\">\r\n                {row._id}\r\n              </TableCell>\r\n              <TableCell className=\"pointer\" onClick={()=>{setSelectedAd(row)}}><Link>{row.title}</Link></TableCell>\r\n              <TableCell>{moment(row.startDate).format('DD/MM/YYYY')} - {moment(row.endDate).format('DD/MM/YYYY')}</TableCell>\r\n              <TableCell  className=\"id-row\">{row.sponsorId}</TableCell>\r\n              <TableCell><RemoveRedEyeIcon className=\"f-15 me-2 f-gray\"/> {row.views}</TableCell>\r\n              <TableCell><ThumbUpIcon className=\"f-15 me-2 f-gray\"/>{row.clicks}</TableCell>\r\n              <TableCell><span className={`sponsor-status-span \r\n                                  ${\r\n                                    row.status === \"Active\" &&\r\n                                    \"ad-status-active\"\r\n                                  }\r\n                                  ${\r\n                                    (row.status === \"Not Started\" ||\r\n                                      row.status === \"Pending\") &&\r\n                                    \"ad-status-pending\"\r\n                                  }\r\n                                  ${\r\n                                    (row.status === \"Ended\" ||\r\n                                      row.status === \"Cancelled\") &&\r\n                                    \"ad-status-ended\"\r\n                                  }`}>{row.status}</span></TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      <div className=\"content-center\">\r\n        <Button variant=\"text w-100 py-3\" onClick={handleLoadmore}>\r\n          Load more <AiOutlineArrowRight className=\"ms-2\" />\r\n        </Button>\r\n      </div>\r\n    </TableContainer>\r\n      </>\r\n      :\r\n      <AdDetails adData={selectedAd} setSelectedAd={setSelectedAd}/>\r\n    }\r\n    \r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport store from '../store';\r\nimport { ADMIN_SIGNOUT } from '../constants/actionTypes';\r\nimport { BACKEND_URL } from '../constants/url'\r\n\r\nconst API = axios.create({baseURL:`${BACKEND_URL}/admin`,withCredentials: true})\r\n\r\nexport const loginAdmin = (data) => API.post(`/signin`,data);\r\nexport const verifyAdmin = () => API.get(`/verify`);\r\nexport const getDashboard = () => API.get(`/get-dash-data`);\r\nexport const logoutAdmin = () => API.get(`/logout`);\r\n\r\nexport const fetchPosts = (skip,limit,status) => API.get(`/fetch-posts?status=${status}&limit=${limit}&skip=${skip}`)\r\nexport const deletePost = (data) => API.post(`/delete-post`,data)\r\nexport const getFullDetails = (id) => API.get(`/get-selected-post?id=${id}`)\r\nexport const updatePostStatus = (id,status) => API.patch(`/update-post-status?id=${id}&status=${status}`)\r\n\r\nexport const fetchUsers = (skip,limit,filter) => API.get(`/fetch-users?filter=${filter}&limit=${limit}&skip=${skip}`)\r\nexport const blockUser = (id,status) => API.patch(`/block-user?id=${id}&status=${status}`)\r\nexport const removeUser = (id) => API.delete(`/remove-user?id=${id}`)\r\n\r\nexport const fetchChannels = (skip,limit,status) => API.get(`/fetch-channels?status=${status}&limit=${limit}&skip=${skip}`)\r\nexport const blockChannel = (id,status) => API.patch(`/block-channel?id=${id}&status=${status}`)\r\nexport const approveChannel = (id) => API.patch(`/approve-channel?id=${id}`)\r\nexport const fetchAds = (skip,limit,status) => API.get(`/fetch-ads?status=${status}&limit=${limit}&skip=${skip}`)\r\nexport const getAdRevenueDetails = (id) => API.get(`/fetch-ad-details/${id}`)\r\nexport const approveAd = (id) => API.patch(`/approve-ad/`, {adId:id})\r\nexport const approvePayout = (data,payoutId) => API.patch(`/approve-payout/${payoutId}`,data)\r\nexport const endCampaign = (id) => API.patch(`/end-campaign/${id}`)\r\nexport const fetchPayouts = (skip,limit,filter) => API.get(`/fetch-payouts?filter=${filter}&limit=${limit}&skip=${skip}`)\r\nexport const getPaypalId = () => API.get(`/get-paypal-id`)\r\n\r\nAPI.interceptors.response.use(response => {\r\n    return response;\r\n}, error => {\r\n\r\n    return new Promise ((res,rej)=>{\r\n        if (error.response.status === 401) {\r\n            store.dispatch({\r\n                type: ADMIN_SIGNOUT,\r\n            })\r\n        }\r\n        rej(error)\r\n    })\r\n\r\n})","export const BACKEND_URL = \"http://localhost:5000/api\""],"names":["adData","setSelectedAd","useState","fullDetails","setFullDetails","useNavigate","loading","setLoading","dispatch","useDispatch","SHOW","HIDE","useEffect","api","_id","data","status","details","handleEndCampaign","type","prev","isCancelled","handleApprove","isApproved","className","onClick","Row","Col","lg","CircularProgress","size","style","color","CPI","CPC","total","paid_amount","toFixed","Container","Dropdown","id","href","DoDisturbAlt","title","url","format","estAmount","Button","estView","viewsCount","clickCount","moment","startDate","endDate","src","BACKEND_URL","imageFrm","alt","imageSqr","AdList","setStatus","ads","setAds","selectedAd","length","loadAds","skip","limit","message","alert","handleLoadmore","parseInt","ToggleButtonGroup","backgroundColor","value","exclusive","onChange","event","newStatus","ToggleButton","TableContainer","component","Paper","Table","sx","minWidth","TableHead","TableRow","TableCell","TableBody","map","row","border","scope","Link","sponsorId","RemoveRedEye","views","ThumbUp","clicks","variant","API","axios","baseURL","withCredentials","loginAdmin","post","verifyAdmin","get","getDashboard","logoutAdmin","fetchPosts","deletePost","getFullDetails","updatePostStatus","patch","fetchUsers","filter","blockUser","removeUser","delete","fetchChannels","blockChannel","approveChannel","fetchAds","getAdRevenueDetails","approveAd","adId","approvePayout","payoutId","endCampaign","fetchPayouts","getPaypalId","interceptors","response","use","error","Promise","res","rej","store","ADMIN_SIGNOUT"],"sourceRoot":""}