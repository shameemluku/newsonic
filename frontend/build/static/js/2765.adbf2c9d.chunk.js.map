{"version":3,"file":"static/js/2765.adbf2c9d.chunk.js","mappings":"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","sources":["Pages/Creator/Transactions/TranTable.js","Pages/Creator/Transactions/Transactions.js","api/index.js","constants/url.js"],"sourcesContent":["import * as React from 'react';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Skeleton, Toolbar, Typography } from '@mui/material';\r\nimport moment from 'moment'\r\nimport nothing from '../../../Images/notransaction.png'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n\r\n  return (\r\n    <>\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        bgcolor:\"white\"\r\n      }}\r\n    >\r\n      \r\n        <Typography\r\n          sx={{ flex: '1 1 100%' }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Transactions\r\n        </Typography>\r\n\r\n    </Toolbar>\r\n\r\n\r\n    </>\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default function TransactionTable({data}) {\r\n\r\n  const {showTopProgress} = useSelector((state)=>state)\r\n\r\n  return (\r\n    <>\r\n    \r\n    <TableContainer component={Paper}>\r\n      <EnhancedTableToolbar/>\r\n      {\r\n        showTopProgress && \r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Trans. Id</TableCell>\r\n            <TableCell align=\"right\">Payment Id.</TableCell>\r\n            <TableCell align=\"right\">Date</TableCell>\r\n            <TableCell align=\"right\">Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {[...Array(5)].map((_,i) => (\r\n            <TableRow\r\n              key={i}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n              <Skeleton height={25} />\r\n              </TableCell>\r\n              <TableCell align=\"right\"><Skeleton height={25} /></TableCell>\r\n              <TableCell align=\"right\"><Skeleton height={25} /></TableCell>\r\n              <TableCell align=\"right\"><Skeleton height={25}/></TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      }\r\n      { (data.length>0) ? \r\n\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Trans. Id</TableCell>\r\n            <TableCell align=\"right\">Payment Id.</TableCell>\r\n            <TableCell align=\"right\">Date</TableCell>\r\n            <TableCell align=\"right\">Amount</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {data.map((row) => (\r\n            <TableRow\r\n              key={row._id}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row._id}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.payId}</TableCell>\r\n              <TableCell align=\"right\">{moment(row.date).format('MMMM d, YYYY')}</TableCell>\r\n              <TableCell align=\"right\">₹ {row.amount}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      :\r\n      <>\r\n        {\r\n          !showTopProgress &&\r\n          <>\r\n          <div className='content-center'>\r\n            <img src={nothing} width=\"200px\" alt=\"\" />\r\n        </div>\r\n        <p className='content-center mb-5'>You don't have any transactions yet</p>\r\n          </>\r\n        }\r\n      </>\r\n      }\r\n    </TableContainer>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Modal,\r\n  Paper,\r\n  Select,\r\n  Skeleton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TransactionTable from \"./TranTable\";\r\nimport \"./Transactions.css\";\r\nimport {\r\n  cancelPayout,\r\n  getTransactionDetails,\r\n  requestPayout,\r\n} from \"../../../api\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\n\r\nfunction Transactions() {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [amount, setAmount] = useState();\r\n  const [isRequested, setIsRequested] = useState(false);\r\n  const [prevAmount, setPrevAmount] = useState(0);\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n  \r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate()\r\n  const { showTopProgress } = useSelector((state) => state);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [paypalAccount, setPaypalAccount] = useState('');\r\n  \r\n  const { channelDetails } = useSelector((state) => state);\r\n\r\n  const style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 400,\r\n    bgcolor: \"background.paper\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      dispatch({ type: \"SHOW_PROGRESS\" });\r\n      let { data } = await getTransactionDetails(channelDetails?.channel._id);\r\n      dispatch({ type: \"HIDE_PROGRESS\" });\r\n      if (data.status) {\r\n        setTransactions([...data?.transactions]);\r\n        setAmount(data?.amount);\r\n        setIsRequested(data?.isRequested);\r\n        setPrevAmount(data?.prevAmount);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const handleRequest = async () => {\r\n    try {\r\n      dispatch({ type: \"SHOW_PROGRESS\" });\r\n      if (isRequested) {\r\n        let { data } = await cancelPayout(channelDetails?.channel._id);\r\n        dispatch({ type: \"HIDE_PROGRESS\" });\r\n        if (data.status) {\r\n          setIsRequested(false);\r\n          showToast(data.message, \"success\");\r\n        }\r\n      } else {\r\n        \r\n        let payout_data = {\r\n          amount,\r\n          paypalId: channelDetails.channel?.paymentAccount\r\n        };\r\n\r\n        let { data } = await requestPayout(\r\n          payout_data,\r\n          channelDetails?.channel._id\r\n        );\r\n        dispatch({ type: \"HIDE_PROGRESS\" });\r\n        if (data.status) {\r\n          setIsRequested(true);\r\n          setPrevAmount(amount);\r\n          showToast(data.message, \"success\");\r\n        }\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: \"HIDE_PROGRESS\" });\r\n    }\r\n  };\r\n\r\n  const showToast = (message, variant) => {\r\n    enqueueSnackbar(message, { variant: variant });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row className=\"mt-4\">\r\n          <Col lg={8}>\r\n            <TransactionTable data={transactions} />\r\n          </Col>\r\n          <Col lg={4}>\r\n            <Paper className=\"p-3\">\r\n              <p className=\"payout-title\">Payouts</p>\r\n              <div className=\"payout-details\">\r\n                <p className=\"content-end mb-0 amount\">\r\n                  ₹{\" \"}\r\n                  {!showTopProgress ? (\r\n                    <>{amount ? amount : \"0.00\"}</>\r\n                  ) : (\r\n                    <>\r\n                      <CircularProgress className=\"mt-2 ms-2\" size={30} />\r\n                    </>\r\n                  )}\r\n                </p>\r\n                <p className=\"content-end mb-0 f-gray\">\r\n                  Available amount to withdraw\r\n                </p>\r\n              </div>\r\n              {amount > 0 ? (\r\n                <Button\r\n                  className={\r\n                    !isRequested ? `request-payout-btn` : `disabled-payout-btn`\r\n                  }\r\n                  disabled={showTopProgress}\r\n                  onClick={()=>{\r\n                    if(!isRequested){\r\n                      handleOpen()\r\n                    }else{\r\n                      handleRequest()\r\n                    }\r\n                  }}\r\n                >\r\n                  {!isRequested\r\n                    ? \"REQUEST PAYOUT\"\r\n                    : `CANCEL REQUEST FOR ${prevAmount}`}\r\n                </Button>\r\n              ) : (\r\n                <Button className=\"no-payout-btn\" disabled={true}>\r\n                  YOU CAN'T REQUEST PAYOUT\r\n                </Button>\r\n              )}\r\n            </Paper>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <div>\r\n        <Modal\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <Box sx={style}>\r\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n              Confirm Payout\r\n            </Typography>\r\n            <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            {channelDetails.channel?.paymentAccount &&\r\n              <>\r\n              <div>You are about to make a payout request to</div>\r\n              <span>{channelDetails.channel?.paymentAccount}</span>\r\n              <EditIcon className=\"channel-edit-btn ms-3\" onClick={()=>{\r\n                navigate('/creator/settings')\r\n              }}/>\r\n              </>\r\n            }\r\n            </Typography>\r\n            {channelDetails.channel?.paymentAccount \r\n                ? <Button className=\"request-payout-btn\" onClick={()=>{\r\n                  handleRequest()\r\n                }}>Confirm</Button>\r\n                : <Link to='/creator/settings'>Add a payment address first</Link>\r\n            }\r\n          </Box>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Transactions;\r\n","import axios from 'axios';\r\nimport store from '../store';\r\nimport { USER_SIGNOUT } from '../constants/actionTypes';\r\nimport { BACKEND_URL } from '../constants/url'\r\n\r\nconst API = axios.create({baseURL:BACKEND_URL,withCredentials: true})\r\n\r\n// Post endpoints\r\n\r\nexport const fetchHomeData = () => API.get(`/posts/fetch-home`);\r\nexport const fetchPosts = (limit,skip,category) => API.get(`/posts/fetch-news/${category}?limit=${limit}&&skip=${skip}`);\r\nexport const fetchPostDetails = (id,signature) => API.get(`/posts/fetch-details/${id}?signature=${signature}`);\r\nexport const postComment = (data) => API.patch('/posts/post-comment/',data);\r\nexport const deleteComment = (data) => API.patch('/posts/delete-comment/',data);\r\nexport const likePost = (data) => API.patch('/posts/like-post/',data);\r\nexport const savePost = (data) => API.patch('/posts/save-post/',data);\r\nexport const deletePost = (data,channelId) => API.post(`/posts/delete-post?channel=${channelId}`,data);\r\nexport const deleteDraft = (data,channelId) => API.post(`/posts/delete-draft?channel=${channelId}`,data);\r\nexport const getRelated = (cat) => API.post('/posts/fetch-related/',cat);\r\nexport const getCategory = () => API.get('/posts/category')\r\nexport const getNavlinks = () => API.get('/posts/nav-links')\r\nexport const getSavedPosts = () => API.get('/posts/fetch-saved')\r\nexport const updatePostText = (data,channelId) => API.patch(`/posts/update-post-data?channel=${channelId}`,data)\r\nexport const updatePostCategory = (data,channelId) => API.patch(`/posts/update-post-category?channel=${channelId}`,data)\r\nexport const updatePostIsComment = (data,channelId) => API.patch(`/posts/update-post-iscomment?channel=${channelId}`,data)\r\nexport const updatePostIsMonetize = (data,channelId) => API.patch(`/posts/update-post-ismonetize?channel=${channelId}`,data)\r\nexport const saveDraft = (data) => API.patch(`/posts/save-draft`,data)\r\nexport const createPost = (newPost,setProgress,progress) => API.post('/posts/addpost',newPost,{\r\n    onUploadProgress: data => {\r\n        setProgress(Math.round((100 * data.loaded) / data.total))\r\n    }\r\n});\r\n\r\n//User endpoints\r\n\r\nexport const signUp = (formData) => API.post('users/signup',formData);\r\nexport const signIn = (formData) => API.post('users/signin',formData);\r\nexport const signOut = () => API.get('users/signout');\r\nexport const verifyUser = () => API.get('users/verify');\r\nexport const fetchUserProfile = () => API.get('users/fetch-profile');\r\nexport const changeDp = (data) => API.patch('users/change-dp',data);\r\nexport const removeDp = () => API.patch('users/remove-dp');\r\nexport const changeName = (data) => API.patch('users/change-name',data);\r\nexport const changePhone = (data) => API.patch('users/change-phone',data);\r\nexport const changePassword = (data) => API.patch('users/change-password',data);\r\n\r\n\r\n//Channel endpoints\r\n\r\nexport const isNameValiable = (name) => API.post('users/check-avail',{name});\r\nexport const getChannelDetails = () => API.get('channel/get-details');\r\nexport const getAddedPosts = (channelId,filter,limit) => API.get(`channel/fetch-added-posts?channel=${channelId}&filter=${filter}&limit=${limit}`);\r\nexport const getDashboard = (channelId) => API.get(`channel/get-dashdata?channel=${channelId}`);\r\nexport const creatorPostDetails = (postId,channelId) => API.get(`channel/get-full-post?postid=${postId}&channel=${channelId}`);\r\nexport const getTransactionDetails = (channelId) => API.get(`channel/get-transactions?channel=${channelId}`);\r\nexport const requestPayout = (data,channelId) => API.put(`channel/request-payout?channel=${channelId}`,data);\r\nexport const cancelPayout = (channelId) => API.delete(`channel/cancel-payout?channel=${channelId}`);\r\nexport const updateChannel = (data,channelId) => API.patch(`channel/update-channel?channel=${channelId}`,data);\r\nexport const updateChannelImage = (data,channelId) => API.patch(`channel/update-channel-image?channel=${channelId}`,data);\r\nexport const createChannel = (channelData,setProgress) => API.post('channel/create',channelData,{\r\n    headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n    },\r\n    onUploadProgress: data => {\r\n        setProgress(Math.round((100 * data.loaded) / data.total))\r\n    }\r\n});\r\n\r\n//Ad Endpoints\r\n\r\nexport const loadDisplayAd = (data,signature) => API.post(`ad/load-ad?signature=${signature}`,data);\r\nexport const clickAd = (data,signature) => API.post(`ad/click-ad?signature=${signature}`,data);\r\nexport const getSponsorAds = (limit,skip) => API.get(`ad/sponsor-ads?limit=${limit}&skip=${skip}`);\r\nexport const getAdRevenueDetails = (adId) => API.get(`ad/ad-revenue-details/${adId}`);\r\nexport const endCampaign = (adId) => API.put(`ad/end-campaign/${adId}`);\r\nexport const getBillingData = () => API.get(`ad/fetch-billing-data`);\r\nexport const createAd = (data,setProgress) => API.post('ad/create',data, {\r\n    onUploadProgress: data => {\r\n        setProgress(Math.round((100 * data.loaded) / data.total))\r\n    }\r\n});\r\n\r\n//Payment Endpoints\r\n\r\nexport const createRazorOrder = (data) => API.post(`payment/create-order`,data);\r\nexport const verifyAndPay = (data) => API.post(`payment/verify-payment`,data);\r\nexport const getTransactions = (skip,limit) => API.get(`payment/fetch-transactions?type=SPONSOR&limit=${limit}&skip=${skip}`);\r\n\r\n\r\n// Get User IP\r\nexport const getUserIp = () => API.get('/users/get-ip')\r\nexport const translate = (text,language) => API.get(`posts/translate/${text}?lang=${language}`)\r\n\r\n\r\n API.interceptors.response.use(response => {\r\n    return response;\r\n }, error => {\r\n    return new Promise ((res,rej)=>{\r\n        try {\r\n            if (error.response.status === 401) {\r\n                store.dispatch({\r\n                    type: USER_SIGNOUT,\r\n                })\r\n                store.dispatch({\r\n                    type: \"HIDE_PROGRESS\",\r\n                })\r\n            }\r\n            if (error.response.status === 403)  window.location.reload()\r\n            if (error.response.status === 404 ) {\r\n                const { type } = error.response.data\r\n                if(type === 'USER_NOT_FOUND') {\r\n                    store.dispatch({\r\n                        type: USER_SIGNOUT,\r\n                    })\r\n                    store.dispatch({\r\n                        type: \"HIDE_PROGRESS\",\r\n                    })\r\n                }\r\n            }\r\n            rej(error)\r\n        } catch (error) {\r\n            rej(error)\r\n        }\r\n        \r\n    })\r\n\r\n})\r\n\r\n","export const BACKEND_URL = \"http://localhost:5000/api\""],"names":["EnhancedTableToolbar","props","Toolbar","sx","pl","sm","pr","xs","bgcolor","Typography","flex","variant","id","component","TransactionTable","data","showTopProgress","useSelector","state","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","align","TableBody","Array","map","_","i","border","scope","Skeleton","height","length","row","_id","payId","moment","date","format","amount","className","src","nothing","width","alt","useState","transactions","setTransactions","setAmount","isRequested","setIsRequested","prevAmount","setPrevAmount","open","setOpen","dispatch","useDispatch","navigate","useNavigate","enqueueSnackbar","useSnackbar","channelDetails","useEffect","type","getTransactionDetails","channel","status","handleRequest","cancelPayout","showToast","message","payout_data","paypalId","paymentAccount","requestPayout","Container","Row","Col","lg","CircularProgress","size","Button","disabled","onClick","Modal","onClose","Box","position","top","left","transform","boxShadow","p","mt","Edit","to","API","axios","baseURL","BACKEND_URL","withCredentials","fetchHomeData","get","fetchPosts","limit","skip","category","fetchPostDetails","signature","postComment","patch","deleteComment","likePost","savePost","deletePost","channelId","post","deleteDraft","getRelated","cat","getCategory","getNavlinks","getSavedPosts","updatePostText","updatePostCategory","updatePostIsComment","updatePostIsMonetize","saveDraft","createPost","newPost","setProgress","progress","onUploadProgress","Math","round","loaded","total","signUp","formData","signIn","signOut","verifyUser","fetchUserProfile","changeDp","removeDp","changeName","changePhone","changePassword","isNameValiable","name","getChannelDetails","getAddedPosts","filter","getDashboard","creatorPostDetails","postId","put","delete","updateChannel","updateChannelImage","createChannel","channelData","headers","loadDisplayAd","clickAd","getSponsorAds","getAdRevenueDetails","adId","endCampaign","getBillingData","createAd","createRazorOrder","verifyAndPay","getTransactions","getUserIp","translate","text","language","interceptors","response","use","error","Promise","res","rej","store","USER_SIGNOUT","window","location","reload"],"sourceRoot":""}